> Flutter default widget name in main.dart is "MyApp"

> if you change widget name to something, then widget_test.dart gives you error
> you can rename MyApp to any in widget test


> MaterialApp() is pre-defined class that gives you widget access
> Its like a package. if don't use, then certain widgets will not work
> Scaffold() is like page your App. has Appbar and body


> Alignments:

Row:
Main Axis : Left to right
Cross Axis: top to bottom

Column:
Main axis: top to bottom
cross axis: left to right

Alignments:

MainAxisAlignment.spaceBetween: High space
MainAxisAlignment.spaceEvenly: Mid space
MainAxisAlignment.spaceAround: Low space

in Widget. name starts with Capital first letter
in Widget's properties always starts with lower case first letter  i.e mainAxisAlignment: 
in properties's values always starts with capital first letter i.e MainAxisAlignment.center;

Widgets:

// For Spacing
SizedBox(height: , width: );

// make Any Widget Scrollable
SingleChildScrollView(child: );

?? ListView vs SingleChildScrollView?   > Listview for multiple, SCSV for single widget!

// Text Input
// Wrap with Container for width height adjustment
TextField();

// Button
// onPressed is required
ElevatedButton(onPressed: null, child: Text(""));


> Stateless vs Stateful class?
> Stateless - no changing on screen. runtime static
> stateful - changes screen on runtime


// Container() - Notes
> Center() widget centers widget with both width and height wise
> padding: EdgeInsets.all() works only with child. Inside
> margin: EdgeInsets.all() works only with Container(). Outside.

> EdgeInsets is class that tells Edges of widget.


// Gradient Color in Container()
- Container(decoration: 
BoxDecoration(
gradient: LinearGradient(colors: [Color.red, Color.green])
))


// Align() - Widget
> alignment: Alignment.bottomLeft
> Widget that changes alignment of our desired
> Similar to Center but has custom placement
> NOTE: when used with Column(), only works with topLeft/right/centre. Not BottomLRC!

// Color by Hex
color: Color(0xFF000000),
- 0xFF is the #
- 000000 is the 6 digit of color

// CircleAvatar() - Widget
- Radius: 100 is the size of circle
- backgroundColor: is the Color of Circle
- backgroundImage: is the Image
> use NetworkImage('URL') for internet
> use AssetImage('Path') from assets

// Stack() - Widget
- Used for placing Over-the-top widgets
- Positioned() - only used inside stack() widget

// Positioned() - Widget
- Used inside Stack() widget
- parameters are top,left,right with numbers
- Similar to padding()

// Responsive Size?
MediaQuery.of(context).size.height/width;
- % percentage of size acc. to device

MediaQuery.of(context).size.height*0.2;
> Means 20% of your device size


// Go to another Widget
Navigator.push(context, MaterialPageRoute(builder: (context) => WIDGET()));

// Exit from widget
Navigator.push(context);

// ListTile() - Widget
- leading: Start
- trailing: End
- title: Text
- subtitle: Text [bottom text]

> ListTile gives you Tile like ChatApp


// ListView.Builder() - widget
- itemCount: 1111
- itemBuilder: (context, index){
  return WIDGET();
  }

> Context - Jo bhi data aarha hota ha uska context dekhta ha
> BuildContext Context - knows the location of widget in a widget tree


GridView() - Can have more than one widget in single line, compared to single widget in single line in ListVew()


// GridView.count() - Widget
- crossAxisCount - [How Many Widgets in single line can have?]
- crossAxisSpacing - [Space Between each widgets in single line]
- mainAxisSpacing - [Space Between Up and Down of widgets]
- children: List.generate(length, (index){ 
  return WIDGET();
  })

46:18





